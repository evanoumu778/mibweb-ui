version: '3.8'

services:
  # Frontend Development
  frontend-dev:
    build:
      context: .
      dockerfile: Dockerfile.dev
    ports:
      - "3000:3000"
    environment:
      - NODE_ENV=development
      - NEXT_PUBLIC_API_URL=http://localhost:8080
      - DATABASE_URL=${DATABASE_URL}
    volumes:
      - .:/app
      - /app/node_modules
      - /app/.next
    networks:
      - dev-network

  # Backend Development
  backend-dev:
    build:
      context: ./backend
      dockerfile: Dockerfile.dev
    ports:
      - "8080:8080"
    environment:
      - ENVIRONMENT=development
      - DATABASE_URL=${DATABASE_URL}
      - REDIS_URL=redis://redis-dev:6379
      - JWT_SECRET=dev-jwt-secret
      - GIN_MODE=debug
    volumes:
      - ./backend:/app
    depends_on:
      - postgres-dev
      - redis-dev
    networks:
      - dev-network

  # Development Database
  postgres-dev:
    image: postgres:15-alpine
    environment:
      - POSTGRES_DB=network_monitor
      - POSTGRES_USER=netmon_user
      - POSTGRES_PASSWORD=netmon_password
    ports:
      - "5432:5432"
    volumes:
      - postgres_dev_data:/var/lib/postgresql/data
      - ./database/init:/docker-entrypoint-initdb.d
    networks:
      - dev-network

  # Development Redis
  redis-dev:
    image: redis:7-alpine
    ports:
      - "6379:6379"
    volumes:
      - redis_dev_data:/data
    networks:
      - dev-network

  # Database Admin (pgAdmin)
  pgadmin:
    image: dpage/pgadmin4
    environment:
      - PGADMIN_DEFAULT_EMAIL=admin@example.com
      - PGADMIN_DEFAULT_PASSWORD=admin
    ports:
      - "5050:80"
    depends_on:
      - postgres-dev
    networks:
      - dev-network

  # Redis Admin (RedisInsight)
  redis-insight:
    image: redislabs/redisinsight:latest
    ports:
      - "8001:8001"
    depends_on:
      - redis-dev
    networks:
      - dev-network

volumes:
  postgres_dev_data:
  redis_dev_data:

networks:
  dev-network:
    driver: bridge
